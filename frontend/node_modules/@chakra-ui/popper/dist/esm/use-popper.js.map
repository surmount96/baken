{"version":3,"sources":["../../src/use-popper.ts"],"names":["mergeRefs","React","usePopper","useBasePopper","getArrowStyles","getBoxShadow","toTransformOrigin","props","placement","preventOverflow","fixed","flip","arrowSize","arrowShadowColor","gutter","arrowPadding","offset","matchWidth","modifiers","referenceNode","setReferenceNode","useState","popperNode","setPopperNode","arrowNode","setArrowNode","customMofidiers","useMemo","name","options","phase","enabled","element","padding","requires","fn","state","styles","popper","width","rects","reference","effect","elements","style","offsetWidth","arrow","modifiersData","centerOffset","setAttribute","removeAttribute","popperJS","strategy","concat","useEffect","id","requestAnimationFrame","forceUpdate","cancelAnimationFrame","finalPlacement","arrowStyles","popperArrowStyles","getReferenceProps","_ref","ref","getPopperProps","attributes","getArrowWrapperProps","getArrowProps","boxShadow","position","zIndex","height","transform","transformOrigin","update"],"mappings":"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","sourcesContent":["import { mergeRefs, PropGetter } from \"@chakra-ui/utils\"\nimport type { Modifier, Placement } from \"@popperjs/core\"\nimport * as React from \"react\"\nimport { usePopper as useBasePopper } from \"./react-popper\"\nimport { getArrowStyles, getBoxShadow, toTransformOrigin } from \"./popper.utils\"\n\nexport type { Placement }\n\nexport interface UsePopperProps {\n  gutter?: number\n  placement?: Placement\n  offset?: [number, number]\n  preventOverflow?: boolean\n  fixed?: boolean\n  flip?: boolean\n  arrowSize?: number\n  arrowShadowColor?: string\n  /**\n   * The distance of the arrow to its next border (numeric)\n   * E.g. arrowPadding = borderRadius * 2\n   */\n  arrowPadding?: number\n  matchWidth?: boolean\n  modifiers?: Modifier<string, any>[]\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    placement = \"bottom\",\n    preventOverflow = true,\n    fixed = false,\n    flip = true,\n    arrowSize = 8,\n    arrowShadowColor,\n    gutter = 8,\n    arrowPadding = 4,\n    offset,\n    matchWidth,\n    modifiers = [],\n  } = props\n\n  const [\n    referenceNode,\n    setReferenceNode,\n  ] = React.useState<HTMLButtonElement | null>(null)\n  const [popperNode, setPopperNode] = React.useState<HTMLDivElement | null>(\n    null,\n  )\n  const [arrowNode, setArrowNode] = React.useState<HTMLDivElement | null>(null)\n\n  /**\n   * recommended via popper docs\n   * @see https://popper.js.org/react-popper/v2/faq/#why-i-get-render-loop-whenever-i-put-a-function-inside-the-popper-configuration\n   */\n  const customMofidiers = React.useMemo<Partial<Modifier<any, unknown>>[]>(\n    () => [\n      // @see https://popper.js.org/docs/v2/modifiers/offset/\n      {\n        name: \"offset\",\n        options: {\n          offset: offset ?? [0, gutter],\n        },\n        phase: \"main\",\n      },\n      // @see https://popper.js.org/docs/v2/modifiers/prevent-overflow/\n      {\n        name: \"preventOverflow\",\n        enabled: !!preventOverflow,\n        phase: \"main\",\n      },\n      // @see https://popper.js.org/docs/v2/modifiers/arrow/\n      {\n        name: \"arrow\",\n        enabled: !!arrowNode,\n        options: { element: arrowNode, padding: arrowPadding },\n        phase: \"main\",\n      },\n      // @see https://popper.js.org/docs/v2/modifiers/flip/\n      {\n        name: \"flip\",\n        enabled: flip,\n        options: {\n          padding: 8,\n        },\n        phase: \"main\",\n      },\n      {\n        name: \"matchWidth\",\n        enabled: !!matchWidth,\n        phase: \"beforeWrite\",\n        requires: [\"computeStyles\"],\n        fn: ({ state }) => {\n          state.styles.popper.width = `${state.rects.reference.width}px`\n        },\n        effect: ({ state }) => () => {\n          const reference = state.elements.reference as HTMLElement\n          state.elements.popper.style.width = `${reference.offsetWidth}px`\n        },\n      },\n      {\n        name: \"applyArrowHide\",\n        enabled: true,\n        phase: \"write\",\n        fn({ state }) {\n          const { arrow } = state.elements\n          if (arrow) {\n            if (state.modifiersData.arrow?.centerOffset !== 0) {\n              arrow.setAttribute(\"data-hide\", \"\")\n            } else {\n              arrow.removeAttribute(\"data-hide\")\n            }\n          }\n        },\n      },\n    ],\n    [\n      arrowNode,\n      arrowPadding,\n      flip,\n      preventOverflow,\n      offset,\n      gutter,\n      matchWidth,\n    ],\n  )\n\n  const popperJS = useBasePopper(referenceNode as any, popperNode as any, {\n    placement,\n    strategy: fixed ? \"fixed\" : \"absolute\",\n    modifiers: customMofidiers.concat(modifiers),\n  })\n\n  /**\n   * Ensure the popper will be correctly positioned with an extra update\n   */\n  React.useEffect(() => {\n    const id = requestAnimationFrame(() => {\n      popperJS.forceUpdate?.()\n    })\n    return () => {\n      cancelAnimationFrame(id)\n    }\n  }, [])\n\n  const finalPlacement = popperJS.state?.placement ?? placement\n\n  const arrowStyles = getArrowStyles({\n    placement: finalPlacement,\n    popperArrowStyles: popperJS.styles.arrow,\n    arrowSize,\n  })\n\n  const getReferenceProps: PropGetter = (props = {}, _ref = null) => {\n    return {\n      ...props,\n      ref: mergeRefs(setReferenceNode, _ref),\n    }\n  }\n\n  const getPopperProps: PropGetter = (props = {}, _ref = null) => {\n    return {\n      ...props,\n      ...popperJS.attributes.popper,\n      ref: mergeRefs(setPopperNode, _ref),\n      style: { ...props.style, ...popperJS.styles?.popper },\n    }\n  }\n\n  const getArrowWrapperProps: PropGetter = (props = {}, _ref = null) => {\n    return {\n      ...props,\n      ...popperJS.attributes.arrow,\n      ref: mergeRefs(setArrowNode, _ref),\n      style: { ...props.style, ...arrowStyles },\n    }\n  }\n\n  const getArrowProps: PropGetter = (props = {}, _ref = null) => {\n    return {\n      ...props,\n      ref: _ref,\n      style: {\n        boxShadow: getBoxShadow(finalPlacement, arrowShadowColor),\n        ...props.style,\n        position: \"absolute\",\n        zIndex: -1,\n        width: \"100%\",\n        height: \"100%\",\n        transform: \"rotate(45deg)\",\n      },\n    }\n  }\n\n  return {\n    transformOrigin: toTransformOrigin(finalPlacement),\n    getReferenceProps,\n    getPopperProps,\n    getArrowWrapperProps,\n    getArrowProps,\n    state: popperJS.state,\n    forceUpdate: popperJS.forceUpdate,\n    update: popperJS.update,\n    placement: finalPlacement,\n  }\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"],"file":"use-popper.js"}