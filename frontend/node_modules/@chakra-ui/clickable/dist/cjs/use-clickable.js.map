{"version":3,"sources":["../../src/use-clickable.ts"],"names":["useClickable","props","htmlRef","ref","isDisabled","isFocusable","clickOnEnter","clickOnSpace","onMouseDown","onMouseUp","onClick","onKeyDown","onKeyUp","tabIndexProp","tabIndex","onMouseOver","htmlProps","isButton","setIsButton","isActive","setIsActive","refCallback","node","tagName","trulyDisabled","handleClick","event","stopPropagation","preventDefault","self","currentTarget","focus","handleKeyDown","defaultPrevented","metaKey","shouldClickOnEnter","key","shouldClickOnSpace","click","handleKeyUp","handleMouseDown","handleMouseUp","handleMouseOver","type","undefined","disabled","role"],"mappings":"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","sourcesContent":["import { dataAttr, isRightClick, mergeRefs } from \"@chakra-ui/utils\"\nimport {\n  ButtonHTMLAttributes,\n  HTMLAttributes,\n  KeyboardEvent,\n  MouseEvent,\n  Ref,\n  useCallback,\n  useState,\n} from \"react\"\n\nexport interface UseClickableProps extends HTMLAttributes<Element> {\n  /**\n   * If `true`, the element will be disabled.\n   * It will set the `disabled` HTML attribute\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and isDisabled, the element will\n   * have only `aria-disabled` set to `true`\n   */\n  isFocusable?: boolean\n  /**\n   * Whether or not trigger click on pressing `Enter`.\n   */\n  clickOnEnter?: boolean\n  /**\n   * Whether or not trigger click on pressing `Space`.\n   */\n  clickOnSpace?: boolean\n  ref?: Ref<HTMLElement>\n}\n\n/**\n * useClickable\n *\n * React hook that implements all the interactions of a native `button`\n * component with support for making it focusable even if it's disabled.\n *\n * It can be used with both native button elements or other elements (like `div`).\n */\nexport function useClickable(props: UseClickableProps = {}) {\n  const {\n    ref: htmlRef,\n    isDisabled,\n    isFocusable,\n    clickOnEnter = true,\n    clickOnSpace = true,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onKeyDown,\n    onKeyUp,\n    tabIndex: tabIndexProp,\n    onMouseOver,\n    ...htmlProps\n  } = props\n  /**\n   * We'll use this to track if the element is a button element\n   */\n  const [isButton, setIsButton] = useState(true)\n\n  /**\n   * For custom button implementation, we'll use this to track when\n   * we mouse down on the button, to enable use style it's \":active\" style\n   */\n  const [isActive, setIsActive] = useState(false)\n\n  /**\n   * The ref callback that fires as soon as the dom node is ready\n   */\n  const refCallback = useCallback((node) => {\n    if (node?.tagName !== \"BUTTON\") {\n      setIsButton(false)\n    }\n  }, [])\n\n  const tabIndex = isButton ? tabIndexProp : tabIndexProp || 0\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const handleClick = useCallback(\n    (event: MouseEvent) => {\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      const self = event.currentTarget as HTMLElement\n      self.focus()\n      onClick?.(event)\n    },\n    [isDisabled, onClick],\n  )\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      onKeyDown?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) {\n        return\n      }\n\n      const shouldClickOnEnter = clickOnEnter && event.key === \"Enter\"\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (!isButton && shouldClickOnSpace) {\n        event.preventDefault()\n        setIsActive(true)\n        return\n      }\n\n      if (!isButton && shouldClickOnEnter) {\n        event.preventDefault()\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n    },\n    [isDisabled, isButton, onKeyDown, clickOnEnter, clickOnSpace],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: KeyboardEvent) => {\n      onKeyUp?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) return\n\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (!isButton && shouldClickOnSpace) {\n        event.preventDefault()\n        setIsActive(false)\n\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n    },\n    [clickOnSpace, isButton, isDisabled, onKeyUp],\n  )\n\n  const handleMouseDown = useCallback(\n    (event: MouseEvent) => {\n      /**\n       * Prevent right-click from triggering the\n       * active state.\n       */\n      if (isRightClick(event)) return\n\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      if (!isButton) {\n        setIsActive(true)\n      }\n\n      onMouseDown?.(event)\n    },\n    [isDisabled, isButton, onMouseDown],\n  )\n\n  const handleMouseUp = useCallback(\n    (event: MouseEvent) => {\n      if (!isButton) {\n        setIsActive(false)\n      }\n\n      onMouseUp?.(event)\n    },\n    [onMouseUp, isButton],\n  )\n\n  const handleMouseOver = useCallback(\n    (event: MouseEvent) => {\n      if (isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      onMouseOver?.(event)\n    },\n    [isDisabled, onMouseOver],\n  )\n\n  const ref = mergeRefs(htmlRef, refCallback)\n\n  if (isButton) {\n    return {\n      ...htmlProps,\n      ref,\n      type: \"button\" as ButtonHTMLAttributes<any>[\"type\"],\n      \"aria-disabled\": trulyDisabled ? undefined : isDisabled,\n      disabled: trulyDisabled,\n      onClick: handleClick,\n      onMouseDown,\n      onMouseUp,\n      onKeyUp,\n      onKeyDown,\n      onMouseOver,\n    }\n  }\n\n  return {\n    ...htmlProps,\n    ref,\n    role: \"button\",\n    \"data-active\": dataAttr(isActive),\n    \"aria-disabled\": !!isDisabled,\n    tabIndex: trulyDisabled ? undefined : tabIndex,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    onKeyUp: handleKeyUp,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n  }\n}\n\nexport type UseClickableReturn = ReturnType<typeof useClickable>\n"],"file":"use-clickable.js"}