{"version":3,"sources":["../../src/use-clickable.ts"],"names":["dataAttr","isRightClick","mergeRefs","useCallback","useState","useClickable","props","ref","htmlRef","isDisabled","isFocusable","clickOnEnter","clickOnSpace","onMouseDown","onMouseUp","onClick","onKeyDown","onKeyUp","tabIndex","tabIndexProp","onMouseOver","htmlProps","isButton","setIsButton","isActive","setIsActive","refCallback","node","tagName","trulyDisabled","handleClick","event","stopPropagation","preventDefault","self","currentTarget","focus","handleKeyDown","defaultPrevented","metaKey","shouldClickOnEnter","key","shouldClickOnSpace","click","handleKeyUp","handleMouseDown","handleMouseUp","handleMouseOver","type","undefined","disabled","role"],"mappings":"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","sourcesContent":["import { dataAttr, isRightClick, mergeRefs } from \"@chakra-ui/utils\"\nimport {\n  ButtonHTMLAttributes,\n  HTMLAttributes,\n  KeyboardEvent,\n  MouseEvent,\n  Ref,\n  useCallback,\n  useState,\n} from \"react\"\n\nexport interface UseClickableProps extends HTMLAttributes<Element> {\n  /**\n   * If `true`, the element will be disabled.\n   * It will set the `disabled` HTML attribute\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and isDisabled, the element will\n   * have only `aria-disabled` set to `true`\n   */\n  isFocusable?: boolean\n  /**\n   * Whether or not trigger click on pressing `Enter`.\n   */\n  clickOnEnter?: boolean\n  /**\n   * Whether or not trigger click on pressing `Space`.\n   */\n  clickOnSpace?: boolean\n  ref?: Ref<HTMLElement>\n}\n\n/**\n * useClickable\n *\n * React hook that implements all the interactions of a native `button`\n * component with support for making it focusable even if it's disabled.\n *\n * It can be used with both native button elements or other elements (like `div`).\n */\nexport function useClickable(props: UseClickableProps = {}) {\n  const {\n    ref: htmlRef,\n    isDisabled,\n    isFocusable,\n    clickOnEnter = true,\n    clickOnSpace = true,\n    onMouseDown,\n    onMouseUp,\n    onClick,\n    onKeyDown,\n    onKeyUp,\n    tabIndex: tabIndexProp,\n    onMouseOver,\n    ...htmlProps\n  } = props\n  /**\n   * We'll use this to track if the element is a button element\n   */\n  const [isButton, setIsButton] = useState(true)\n\n  /**\n   * For custom button implementation, we'll use this to track when\n   * we mouse down on the button, to enable use style it's \":active\" style\n   */\n  const [isActive, setIsActive] = useState(false)\n\n  /**\n   * The ref callback that fires as soon as the dom node is ready\n   */\n  const refCallback = useCallback((node) => {\n    if (node?.tagName !== \"BUTTON\") {\n      setIsButton(false)\n    }\n  }, [])\n\n  const tabIndex = isButton ? tabIndexProp : tabIndexProp || 0\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const handleClick = useCallback(\n    (event: MouseEvent) => {\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      const self = event.currentTarget as HTMLElement\n      self.focus()\n      onClick?.(event)\n    },\n    [isDisabled, onClick],\n  )\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      onKeyDown?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) {\n        return\n      }\n\n      const shouldClickOnEnter = clickOnEnter && event.key === \"Enter\"\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (!isButton && shouldClickOnSpace) {\n        event.preventDefault()\n        setIsActive(true)\n        return\n      }\n\n      if (!isButton && shouldClickOnEnter) {\n        event.preventDefault()\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n    },\n    [isDisabled, isButton, onKeyDown, clickOnEnter, clickOnSpace],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: KeyboardEvent) => {\n      onKeyUp?.(event)\n\n      if (isDisabled || event.defaultPrevented || event.metaKey) return\n\n      const shouldClickOnSpace = clickOnSpace && event.key === \" \"\n\n      if (!isButton && shouldClickOnSpace) {\n        event.preventDefault()\n        setIsActive(false)\n\n        const self = event.currentTarget as HTMLElement\n        self.click()\n      }\n    },\n    [clickOnSpace, isButton, isDisabled, onKeyUp],\n  )\n\n  const handleMouseDown = useCallback(\n    (event: MouseEvent) => {\n      /**\n       * Prevent right-click from triggering the\n       * active state.\n       */\n      if (isRightClick(event)) return\n\n      if (isDisabled) {\n        event.stopPropagation()\n        event.preventDefault()\n        return\n      }\n\n      if (!isButton) {\n        setIsActive(true)\n      }\n\n      onMouseDown?.(event)\n    },\n    [isDisabled, isButton, onMouseDown],\n  )\n\n  const handleMouseUp = useCallback(\n    (event: MouseEvent) => {\n      if (!isButton) {\n        setIsActive(false)\n      }\n\n      onMouseUp?.(event)\n    },\n    [onMouseUp, isButton],\n  )\n\n  const handleMouseOver = useCallback(\n    (event: MouseEvent) => {\n      if (isDisabled) {\n        event.preventDefault()\n        return\n      }\n\n      onMouseOver?.(event)\n    },\n    [isDisabled, onMouseOver],\n  )\n\n  const ref = mergeRefs(htmlRef, refCallback)\n\n  if (isButton) {\n    return {\n      ...htmlProps,\n      ref,\n      type: \"button\" as ButtonHTMLAttributes<any>[\"type\"],\n      \"aria-disabled\": trulyDisabled ? undefined : isDisabled,\n      disabled: trulyDisabled,\n      onClick: handleClick,\n      onMouseDown,\n      onMouseUp,\n      onKeyUp,\n      onKeyDown,\n      onMouseOver,\n    }\n  }\n\n  return {\n    ...htmlProps,\n    ref,\n    role: \"button\",\n    \"data-active\": dataAttr(isActive),\n    \"aria-disabled\": !!isDisabled,\n    tabIndex: trulyDisabled ? undefined : tabIndex,\n    onClick: handleClick,\n    onMouseDown: handleMouseDown,\n    onMouseUp: handleMouseUp,\n    onKeyUp: handleKeyUp,\n    onKeyDown: handleKeyDown,\n    onMouseOver: handleMouseOver,\n  }\n}\n\nexport type UseClickableReturn = ReturnType<typeof useClickable>\n"],"file":"use-clickable.js"}