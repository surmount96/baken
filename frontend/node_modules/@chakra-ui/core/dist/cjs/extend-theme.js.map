{"version":3,"sources":["../../src/extend-theme.ts"],"names":["extendTheme","overrides","customizer","source","override","sourceValue","overrideValue","undefined","defaultTheme"],"mappings":";;;;;AAAA;;AACA;;;;AAEA;AACA;AACA;AACA;AACO,SAASA,WAAT,CACLC,SADK,EAEL;AACA,WAASC,UAAT,CAAoBC,MAApB,EAAqCC,QAArC,EAAwD;AACtD,QAAI,uBAAWD,MAAX,CAAJ,EAAwB;AACtB,aAAO,YAAwB;AAC7B,YAAME,WAAW,GAAGF,MAAM,MAAN,mBAApB;AAEA,YAAMG,aAAa,GAAG,uBAAWF,QAAX,IAClBA,QAAQ,MAAR,mBADkB,GAElBA,QAFJ;AAIA,eAAO,sBAAU,EAAV,EAAcC,WAAd,EAA2BC,aAA3B,EAA0CJ,UAA1C,CAAP;AACD,OARD;AASD,KAXqD,CAatD;;;AACA,WAAOK,SAAP;AACD;;AAED,SAAO,sBAAU,EAAV,EAAcC,iBAAd,EAA4BP,SAA5B,EAAuCC,UAAvC,CAAP;AACD","sourcesContent":["import defaultTheme, { Theme } from \"@chakra-ui/theme\"\nimport { isFunction, mergeWith } from \"@chakra-ui/utils\"\n\n/**\n * Function to override or customize the Chakra UI theme conveniently\n * @param overrides - Your custom theme object overrides\n */\nexport function extendTheme<T extends Theme | Record<string, any>>(\n  overrides: T,\n) {\n  function customizer(source: unknown, override: unknown) {\n    if (isFunction(source)) {\n      return (...args: unknown[]) => {\n        const sourceValue = source(...args)\n\n        const overrideValue = isFunction(override)\n          ? override(...args)\n          : override\n\n        return mergeWith({}, sourceValue, overrideValue, customizer)\n      }\n    }\n\n    // fallback to default behaviour\n    return undefined\n  }\n\n  return mergeWith({}, defaultTheme, overrides, customizer)\n}\n"],"file":"extend-theme.js"}