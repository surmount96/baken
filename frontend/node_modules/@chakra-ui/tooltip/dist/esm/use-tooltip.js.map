{"version":3,"sources":["../../src/use-tooltip.ts"],"names":["useDisclosure","useEventListener","useId","usePopper","callAllHandlers","mergeRefs","mergeWith","useCallback","useEffect","useRef","useTooltip","props","openDelay","closeDelay","closeOnClick","closeOnMouseDown","onOpen","onOpenProp","onClose","onCloseProp","placement","id","isOpen","isOpenProp","defaultIsOpen","arrowSize","arrowShadowColor","arrowPadding","modifiers","isDisabled","gutter","offset","htmlProps","popper","tooltipId","ref","enterTimeout","exitTimeout","openWithDelay","current","window","setTimeout","closeWithDelay","clearTimeout","onClick","onMouseDown","onKeyDown","event","key","getTriggerProps","_ref","triggerProps","onMouseEnter","onFocus","onBlur","undefined","getReferenceProps","getTooltipProps","tooltipProps","role","getTooltipWrapperProps","getPopperProps","style","transformOrigin","show","hide","getArrowWrapperProps","getArrowProps"],"mappings":"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","sourcesContent":["import { useDisclosure, useEventListener, useId } from \"@chakra-ui/hooks\"\nimport { Placement, usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport {\n  callAllHandlers,\n  mergeRefs,\n  mergeWith,\n  PropGetter,\n} from \"@chakra-ui/utils\"\nimport { useCallback, useEffect, useRef } from \"react\"\n\nexport interface UseTooltipProps\n  extends Pick<\n    UsePopperProps,\n    | \"arrowSize\"\n    | \"modifiers\"\n    | \"gutter\"\n    | \"offset\"\n    | \"arrowShadowColor\"\n    | \"arrowPadding\"\n  > {\n  /**\n   * Delay (in ms) before showing the tooltip\n   * @default 0ms\n   */\n  openDelay?: number\n  /**\n   * Delay (in ms) before hiding the tooltip\n   * @default 0ms\n   */\n  closeDelay?: number\n  /**\n   * If `true`, the tooltip will hide on click\n   */\n  closeOnClick?: boolean\n  /**\n   * If `true`, the tooltip will hide while the mouse\n   * is down\n   */\n  closeOnMouseDown?: boolean\n  /**\n   * Callback to run when the tooltip shows\n   */\n  onOpen?(): void\n  /**\n   * Callback to run when the tooltip hides\n   */\n  onClose?(): void\n  /**\n   * The Popper.js placement of the tooltip\n   */\n  placement?: Placement\n  /**\n   * Custom `id` to use in place of `uuid`\n   */\n  id?: string\n  /**\n   * If `true`, the tooltip will be shown (in controlled mode)\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the tooltip will be initially shown\n   */\n  defaultIsOpen?: boolean\n  isDisabled?: boolean\n}\n\nexport function useTooltip(props: UseTooltipProps = {}) {\n  const {\n    openDelay = 0,\n    closeDelay = 0,\n    closeOnClick = true,\n    closeOnMouseDown,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n    placement,\n    id,\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    arrowSize = 10,\n    arrowShadowColor,\n    arrowPadding,\n    modifiers,\n    isDisabled,\n    gutter,\n    offset,\n    ...htmlProps\n  } = props\n\n  const { isOpen, onOpen, onClose } = useDisclosure({\n    isOpen: isOpenProp,\n    defaultIsOpen,\n    onOpen: onOpenProp,\n    onClose: onCloseProp,\n  })\n\n  const popper = usePopper({\n    placement,\n    arrowSize,\n    arrowShadowColor,\n    arrowPadding,\n    modifiers,\n    gutter,\n    offset,\n  })\n\n  const tooltipId = useId(id, \"tooltip\")\n\n  const ref = useRef<any>(null)\n\n  const enterTimeout = useRef<number>()\n  const exitTimeout = useRef<number>()\n\n  const openWithDelay = useCallback(() => {\n    if (!isDisabled) {\n      enterTimeout.current = window.setTimeout(onOpen, openDelay)\n    }\n  }, [isDisabled, onOpen, openDelay])\n\n  const closeWithDelay = useCallback(() => {\n    if (enterTimeout.current) {\n      clearTimeout(enterTimeout.current)\n    }\n    exitTimeout.current = window.setTimeout(onClose, closeDelay)\n  }, [closeDelay, onClose])\n\n  const onClick = useCallback(() => {\n    if (closeOnClick) {\n      closeWithDelay()\n    }\n  }, [closeOnClick, closeWithDelay])\n\n  const onMouseDown = useCallback(() => {\n    if (closeOnMouseDown) {\n      closeWithDelay()\n    }\n  }, [closeOnMouseDown, closeWithDelay])\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (isOpen && event.key === \"Escape\") {\n      closeWithDelay()\n    }\n  }\n\n  useEventListener(\"keydown\", onKeyDown)\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(enterTimeout.current)\n      clearTimeout(exitTimeout.current)\n    }\n  }, [])\n\n  /**\n   * This allows for catching mouseleave events when the tooltip\n   * trigger is disabled. There's currently a known issue in\n   * React regarding the onMouseLeave polyfill.\n   * @see https://github.com/facebook/react/issues/11972\n   */\n  useEventListener(\"mouseleave\", closeWithDelay, ref.current)\n\n  const getTriggerProps: PropGetter = (props = {}, _ref = null) => {\n    const triggerProps = {\n      ...props,\n      onMouseEnter: callAllHandlers(props.onMouseEnter, openWithDelay),\n      onClick: callAllHandlers(props.onClick, onClick),\n      onMouseDown: callAllHandlers(props.onMouseDown, onMouseDown),\n      onFocus: callAllHandlers(props.onFocus, openWithDelay),\n      onBlur: callAllHandlers(props.onBlur, closeWithDelay),\n      \"aria-describedby\": isOpen ? tooltipId : undefined,\n    }\n\n    return popper.getReferenceProps(triggerProps, mergeRefs(ref, _ref))\n  }\n\n  const getTooltipProps: PropGetter = (props = {}, _ref = null) => {\n    const tooltipProps = {\n      ref: _ref,\n      ...htmlProps,\n      ...props,\n      id: tooltipId,\n      role: \"tooltip\",\n    }\n\n    return tooltipProps\n  }\n\n  const getTooltipWrapperProps: PropGetter = (props = {}, _ref = null) =>\n    popper.getPopperProps(\n      mergeWith(props, {\n        style: { transformOrigin: popper.transformOrigin },\n      }),\n      _ref,\n    )\n\n  return {\n    isOpen,\n    show: openWithDelay,\n    hide: closeWithDelay,\n    getTriggerProps,\n    getTooltipProps,\n    getTooltipWrapperProps,\n    transformOrigin: popper.transformOrigin,\n    placement: popper.placement,\n    getArrowWrapperProps: popper.getArrowWrapperProps,\n    getArrowProps: popper.getArrowProps,\n  }\n}\n\nexport type UseTooltipReturn = ReturnType<typeof useTooltip>\n"],"file":"use-tooltip.js"}