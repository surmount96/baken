{"ast":null,"code":"import { mode } from \"@chakra-ui/theme-tools\";\nvar parts = [\"overlay\", \"dialogContainer\", \"dialog\", \"header\", \"body\", \"footer\"];\nvar baseStyleOverlay = {\n  bg: \"blackAlpha.600\",\n  zIndex: \"modal\"\n};\n\nfunction baseStyleDialogContainer(props) {\n  var {\n    isCentered,\n    scrollBehavior\n  } = props;\n  return {\n    display: \"flex\",\n    zIndex: \"modal\",\n    justifyContent: \"center\",\n    alignItems: isCentered ? \"center\" : \"flex-start\",\n    overflow: scrollBehavior === \"inside\" ? \"hidden\" : \"auto\"\n  };\n}\n\nfunction baseStyleDialog(props) {\n  var {\n    scrollBehavior\n  } = props;\n  return {\n    borderRadius: \"md\",\n    bg: mode(\"white\", \"gray.700\")(props),\n    color: \"inherit\",\n    my: \"3.75rem\",\n    zIndex: \"modal\",\n    maxH: scrollBehavior === \"inside\" ? \"calc(100vh - 7.5rem)\" : undefined,\n    boxShadow: mode(\"lg\", \"dark-lg\")(props)\n  };\n}\n\nvar baseStyleHeader = {\n  px: 6,\n  py: 4,\n  fontSize: \"xl\",\n  fontWeight: \"semibold\"\n};\n\nfunction baseStyleBody(props) {\n  var {\n    scrollBehavior\n  } = props;\n  return {\n    px: 6,\n    py: 2,\n    flex: 1,\n    overflow: scrollBehavior === \"inside\" ? \"auto\" : undefined\n  };\n}\n\nvar baseStyleFooter = {\n  px: 6,\n  py: 4\n};\n\nvar baseStyle = props => ({\n  overlay: baseStyleOverlay,\n  dialogContainer: baseStyleDialogContainer(props),\n  dialog: baseStyleDialog(props),\n  header: baseStyleHeader,\n  body: baseStyleBody(props),\n  footer: baseStyleFooter\n});\n/**\n * Since the `maxWidth` prop references theme.sizes internally,\n * we can leverage that to size our modals.\n */\n\n\nfunction getSize(value) {\n  if (value === \"full\") {\n    return {\n      dialog: {\n        maxW: \"100vw\",\n        h: \"100vh\"\n      }\n    };\n  }\n\n  return {\n    dialog: {\n      maxW: value\n    }\n  };\n}\n\nvar sizes = {\n  xs: getSize(\"xs\"),\n  sm: getSize(\"sm\"),\n  md: getSize(\"md\"),\n  lg: getSize(\"lg\"),\n  xl: getSize(\"xl\"),\n  \"2xl\": getSize(\"2xl\"),\n  \"3xl\": getSize(\"3xl\"),\n  \"4xl\": getSize(\"4xl\"),\n  \"5xl\": getSize(\"5xl\"),\n  \"6xl\": getSize(\"6xl\"),\n  full: getSize(\"full\")\n};\nvar defaultProps = {\n  size: \"md\"\n};\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps\n};","map":{"version":3,"sources":["../../../src/components/modal.ts"],"names":["parts","baseStyleOverlay","bg","zIndex","scrollBehavior","display","justifyContent","alignItems","isCentered","overflow","borderRadius","mode","color","my","maxH","boxShadow","baseStyleHeader","px","py","fontSize","fontWeight","flex","undefined","baseStyleFooter","baseStyle","props","overlay","dialogContainer","baseStyleDialogContainer","dialog","baseStyleDialog","header","body","baseStyleBody","footer","value","maxW","h","sizes","xs","getSize","sm","md","lg","xl","full","defaultProps","size"],"mappings":"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","sourcesContent":["import { mode } from \"@chakra-ui/theme-tools\"\n\nconst parts = [\n  \"overlay\",\n  \"dialogContainer\",\n  \"dialog\",\n  \"header\",\n  \"body\",\n  \"footer\",\n]\n\nconst baseStyleOverlay = {\n  bg: \"blackAlpha.600\",\n  zIndex: \"modal\",\n}\n\ntype Dict = Record<string, any>\n\nfunction baseStyleDialogContainer(props: Dict) {\n  const { isCentered, scrollBehavior } = props\n\n  return {\n    display: \"flex\",\n    zIndex: \"modal\",\n    justifyContent: \"center\",\n    alignItems: isCentered ? \"center\" : \"flex-start\",\n    overflow: scrollBehavior === \"inside\" ? \"hidden\" : \"auto\",\n  }\n}\n\nfunction baseStyleDialog(props: Dict) {\n  const { scrollBehavior } = props\n\n  return {\n    borderRadius: \"md\",\n    bg: mode(\"white\", \"gray.700\")(props),\n    color: \"inherit\",\n    my: \"3.75rem\",\n    zIndex: \"modal\",\n    maxH: scrollBehavior === \"inside\" ? \"calc(100vh - 7.5rem)\" : undefined,\n    boxShadow: mode(\"lg\", \"dark-lg\")(props),\n  }\n}\n\nconst baseStyleHeader = {\n  px: 6,\n  py: 4,\n  fontSize: \"xl\",\n  fontWeight: \"semibold\",\n}\n\nfunction baseStyleBody(props: Dict) {\n  const { scrollBehavior } = props\n  return {\n    px: 6,\n    py: 2,\n    flex: 1,\n    overflow: scrollBehavior === \"inside\" ? \"auto\" : undefined,\n  }\n}\n\nconst baseStyleFooter = {\n  px: 6,\n  py: 4,\n}\n\nconst baseStyle = (props: Dict) => ({\n  overlay: baseStyleOverlay,\n  dialogContainer: baseStyleDialogContainer(props),\n  dialog: baseStyleDialog(props),\n  header: baseStyleHeader,\n  body: baseStyleBody(props),\n  footer: baseStyleFooter,\n})\n\n/**\n * Since the `maxWidth` prop references theme.sizes internally,\n * we can leverage that to size our modals.\n */\nfunction getSize(value: string) {\n  if (value === \"full\") {\n    return { dialog: { maxW: \"100vw\", h: \"100vh\" } }\n  }\n  return { dialog: { maxW: value } }\n}\n\nconst sizes = {\n  xs: getSize(\"xs\"),\n  sm: getSize(\"sm\"),\n  md: getSize(\"md\"),\n  lg: getSize(\"lg\"),\n  xl: getSize(\"xl\"),\n  \"2xl\": getSize(\"2xl\"),\n  \"3xl\": getSize(\"3xl\"),\n  \"4xl\": getSize(\"4xl\"),\n  \"5xl\": getSize(\"5xl\"),\n  \"6xl\": getSize(\"6xl\"),\n  full: getSize(\"full\"),\n}\n\nconst defaultProps = {\n  size: \"md\",\n}\n\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps,\n}\n"]},"metadata":{},"sourceType":"module"}