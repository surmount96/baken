{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { Icon } from \"@chakra-ui/icon\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { getValidChildren, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/components/list\n */\n\nexport var List = /*#__PURE__*/forwardRef(function List(props, ref) {\n  var {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"children\", \"styleType\", \"stylePosition\", \"spacing\"]);\n\n  var validChildren = getValidChildren(children);\n  var selector = \"& > *:not(style) ~ *:not(style)\";\n  return /*#__PURE__*/React.createElement(chakra.ul, _extends({\n    ref: ref,\n    listStyleType: styleType,\n    listStylePosition: stylePosition\n    /**\n     * We added this role to fix the Safari accessibility issue with list-style-type: none\n     * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n     */\n    ,\n    role: \"list\",\n    __css: spacing ? {\n      [selector]: {\n        mt: spacing\n      }\n    } : {}\n  }, rest), validChildren);\n});\n\nif (__DEV__) {\n  List.displayName = \"List\";\n}\n\nexport var OrderedList = /*#__PURE__*/forwardRef(function OrderedList(props, ref) {\n  var rest = _objectWithoutPropertiesLoose(props, [\"as\"]);\n\n  return /*#__PURE__*/React.createElement(List, _extends({\n    ref: ref,\n    as: \"ol\",\n    styleType: \"decimal\",\n    marginLeft: \"1em\"\n  }, rest));\n});\n\nif (__DEV__) {\n  OrderedList.displayName = \"OrderedList\";\n}\n\nexport var UnorderedList = /*#__PURE__*/forwardRef(function UnorderedList(props, ref) {\n  var rest = _objectWithoutPropertiesLoose(props, [\"as\"]);\n\n  return /*#__PURE__*/React.createElement(List, _extends({\n    ref: ref,\n    as: \"ul\",\n    styleType: \"initial\",\n    marginLeft: \"1em\"\n  }, rest));\n});\n\nif (__DEV__) {\n  UnorderedList.displayName = \"UnorderedList\";\n}\n/**\n * ListItem\n *\n * Used to render a list item\n */\n\n\nexport var ListItem = chakra(\"li\");\n\nif (__DEV__) {\n  ListItem.displayName = \"ListItem\";\n}\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\n\n\nexport var ListIcon = /*#__PURE__*/forwardRef(function ListIcon(props, ref) {\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    role: \"presentation\",\n    marginRight: \"0.5rem\",\n    display: \"inline\",\n    verticalAlign: \"text-bottom\"\n  }, props));\n});\n\nif (__DEV__) {\n  ListIcon.displayName = \"ListIcon\";\n}","map":{"version":3,"sources":["../../src/list.tsx"],"names":["List","forwardRef","styleType","spacing","rest","validChildren","getValidChildren","selector","stylePosition","mt","OrderedList","UnorderedList","ListItem","chakra","ListIcon"],"mappings":"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","sourcesContent":["import { Icon, IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  SystemProps,\n  forwardRef,\n  PropsOf,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { getValidChildren, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\ninterface ListOptions {\n  /**\n   * Short hand prop for `listStyleType`\n   */\n  styleType?: SystemProps[\"listStyleType\"]\n  /**\n   * Short hand prop for `listStylePosition`\n   */\n  stylePosition?: SystemProps[\"listStylePosition\"]\n  /**\n   * The space between each list item\n   */\n  spacing?: SystemProps[\"margin\"]\n}\n\nexport interface ListProps extends HTMLChakraProps<\"ul\">, ListOptions {}\n\n/**\n * List is used to display list items, it renders a `<ul>` by default.\n *\n * @see Docs https://chakra-ui.com/components/list\n */\nexport const List = forwardRef<ListProps, \"ul\">(function List(props, ref) {\n  const {\n    children,\n    styleType = \"none\",\n    stylePosition,\n    spacing,\n    ...rest\n  } = props\n\n  const validChildren = getValidChildren(children)\n\n  const selector = \"& > *:not(style) ~ *:not(style)\"\n\n  return (\n    <chakra.ul\n      ref={ref}\n      listStyleType={styleType}\n      listStylePosition={stylePosition}\n      /**\n       * We added this role to fix the Safari accessibility issue with list-style-type: none\n       * @see https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html\n       */\n      role=\"list\"\n      __css={spacing ? { [selector]: { mt: spacing } } : {}}\n      {...rest}\n    >\n      {validChildren}\n    </chakra.ul>\n  )\n})\n\nif (__DEV__) {\n  List.displayName = \"List\"\n}\n\nexport const OrderedList = forwardRef<ListProps, \"ol\">(function OrderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ol\" styleType=\"decimal\" marginLeft=\"1em\" {...rest} />\n  )\n})\n\nif (__DEV__) {\n  OrderedList.displayName = \"OrderedList\"\n}\n\nexport const UnorderedList = forwardRef<ListProps, \"ul\">(function UnorderedList(\n  props,\n  ref,\n) {\n  const { as, ...rest } = props\n  return (\n    <List ref={ref} as=\"ul\" styleType=\"initial\" marginLeft=\"1em\" {...rest} />\n  )\n})\n\nif (__DEV__) {\n  UnorderedList.displayName = \"UnorderedList\"\n}\n\nexport interface ListItemProps extends PropsOf<typeof ListItem> {}\n\n/**\n * ListItem\n *\n * Used to render a list item\n */\nexport const ListItem = chakra(\"li\")\n\nif (__DEV__) {\n  ListItem.displayName = \"ListItem\"\n}\n\n/**\n * ListIcon\n *\n * Used to render an icon beside the list item text\n */\nexport const ListIcon = forwardRef<IconProps, \"svg\">(function ListIcon(\n  props,\n  ref,\n) {\n  return (\n    <Icon\n      ref={ref}\n      role=\"presentation\"\n      marginRight=\"0.5rem\"\n      display=\"inline\"\n      verticalAlign=\"text-bottom\"\n      {...props}\n    />\n  )\n})\n\nif (__DEV__) {\n  ListIcon.displayName = \"ListIcon\"\n}\n"]},"metadata":{},"sourceType":"module"}